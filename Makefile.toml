[config]
default_to_workspace = false

[tasks.ci-flow]
dependencies = ["test-doc", "clippy", "test", "docs"]


[tasks.check]
command = "cargo"
args = ["check", "--all-features", "--all-targets"]

[tasks.test]
command = "cargo"
args = ["nextest", "run"]

[tasks.test-doc]
command = "cargo"
args = ["test", "--doc"]

[tasks.doc]
script = '''
cargo run --bin snippetter
if [ ! -e "docs" ]; then
    mkdir -p "docs"
fi
cp contents/* docs/
if [ ! -e "docs/rustdoc" ]; then
    mkdir -p "docs/rustdoc"
fi
RUSTDOCFLAGS="--html-in-header contents/header.html" \
    cargo doc --workspace --no-deps
cp -r target/doc/* docs/rustdoc/
'''

[tasks.clippy]
command = "cargo"
args = [
  "clippy",
  "--all-features",
  "--all-targets",
  "--",
  "-Dwarnings",
  "-Wclippy::pedantic",
  "-Aclippy::cast-possible-truncation",
  "-Aclippy::cast-possible-wrap",
  "-Aclippy::cast-precision-loss",
  "-Aclippy::cast-sign-loss",
  "-Aclippy::doc-markdown",
  "-Aclippy::manual-let-else",
  "-Aclippy::maybe-infinite-iter",
  "-Aclippy::missing-errors-doc",
  "-Aclippy::missing-panics-doc",
  "-Aclippy::module-name-repetitions",
  "-Aclippy::must-use-candidate",
  "-Aclippy::return-self-not-must-use",
  "-Aclippy::semicolon-if-nothing-returned",
  "-Aclippy::similar-names",
  "-Aclippy::uninlined-format-args",
  "-Aclippy::unreadable_literal",
]

[tasks.pedantics]
script = '''
cargo clippy --all-targets --all-features -- -W clippy::pedantic 2>&1 | grep 'note: `-W clippy::' | sed -n 's/.*note: `-W clippy::\([a-z|-]*\).*/\1/p' | sort | uniq
'''

[tasks.dev]
script = '''
cd docs && python3 -m http.server 8000
'''
description = "Serve documentation locally at http://localhost:8000"
