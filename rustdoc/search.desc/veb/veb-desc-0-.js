searchState.loadedDescShard("veb", 0, "A predecessor data structure based on van Emde Boas trees.\nA van Emde Boas tree-based map. The map is implemented as …\nA van Emde Boas tree.\nReturns the elements in the map in ascending order. The …\nReturns the elements in the set in ascending order. The …\nReturns <code>true</code> if the set contains the given element. …\nReturns <code>true</code> if the map contains the given key.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value corresponding to the key.\nReturns a mutable reference to the value corresponding to …\nInserts an element into the map. Returns the previous …\nInserts an element into the set. Returns <code>true</code> if the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the map is empty.\nReturns <code>true</code> if the set is empty. Returns <code>false</code> if the set …\nReturns $|S|$.\nReturns the number of elements in the set.\nReturns the entry at $\\max \\left( S \\right)$.\nReturns the maximum element in the set. Returns <code>None</code> if …\nReturns the key $\\max \\left( S \\right)$.\nReturns the value at $\\max \\left( S \\right)$.\nReturns the entry at $\\min \\left( S \\right)$.\nReturns the minimum element in the set. Returns <code>None</code> if …\nReturns the key $\\min \\left( S \\right)$.\nReturns the value at $\\min \\left( S \\right)$.\nCreates a new van Emde Boas tree-based map with the given …\nCreates a new van Emde Boas tree with the given capacity.\nReturns the entry at $\\max \\left (i^▽ \\right)$.\nReturns $\\min{j \\in S \\mid j \\le i}$.\nReturns the entry at $\\max \\left (i^▲ \\right)$.\nReturns $\\max{j \\in S \\mid j \\leq i}$.\nReturns the key $\\max \\left (i^▲ \\right)$.\nReturns the value at $\\max \\left (i^▲ \\right)$.\nReturns the key $\\max \\left (i^▽ \\right)$.\nReturns the value at $\\max \\left (i^▽ \\right)$.\nReturns the value at $i$.\nRemoves an element from the set. Returns <code>true</code> if the …\nReturns the entry at $\\min \\left (i^△ \\right)$.\nReturns the minimum element greater than given element. …\nReturns the entry at $\\min \\left (i^▲ \\right)$.\nReturns the key $\\min \\left (i^▲ \\right)$.\nReturns the value at $\\min \\left (i^▲ \\right)$.\nReturns the key $\\min \\left (i^△ \\right)$.\nReturns the value at $\\min \\left (i^△ \\right)$.")