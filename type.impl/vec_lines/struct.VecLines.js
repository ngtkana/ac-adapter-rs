(function() {
    var type_impls = Object.fromEntries([["vec_lines",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-VecLines%3CT,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#82\">source</a><a href=\"#impl-Clone-for-VecLines%3CT,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"vec_lines/struct.VecLines.html\" title=\"struct vec_lines::VecLines\">VecLines</a>&lt;T, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#82\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"vec_lines/struct.VecLines.html\" title=\"struct vec_lines::VecLines\">VecLines</a>&lt;T, C&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","vec_lines::VecLinesDecreasing","vec_lines::VecLinesIncreasing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-VecLines%3CT,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#82\">source</a><a href=\"#impl-Debug-for-VecLines%3CT,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"vec_lines/struct.VecLines.html\" title=\"struct vec_lines::VecLines\">VecLines</a>&lt;T, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#82\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","vec_lines::VecLinesDecreasing","vec_lines::VecLinesIncreasing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-VecLines%3CT,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#367-371\">source</a><a href=\"#impl-Default-for-VecLines%3CT,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"vec_lines/trait.Signed.html\" title=\"trait vec_lines::Signed\">Signed</a>, C: <a class=\"trait\" href=\"vec_lines/trait.Constraint.html\" title=\"trait vec_lines::Constraint\">Constraint</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"vec_lines/struct.VecLines.html\" title=\"struct vec_lines::VecLines\">VecLines</a>&lt;T, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#368-370\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.82.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","vec_lines::VecLinesDecreasing","vec_lines::VecLinesIncreasing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-VecLines%3CT,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#82\">source</a><a href=\"#impl-Hash-for-VecLines%3CT,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"vec_lines/struct.VecLines.html\" title=\"struct vec_lines::VecLines\">VecLines</a>&lt;T, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#82\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/hash/mod.rs.html#235-237\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.82.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","vec_lines::VecLinesDecreasing","vec_lines::VecLinesIncreasing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-VecLines%3CT,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#82\">source</a><a href=\"#impl-PartialEq-for-VecLines%3CT,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"vec_lines/struct.VecLines.html\" title=\"struct vec_lines::VecLines\">VecLines</a>&lt;T, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#82\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"vec_lines/struct.VecLines.html\" title=\"struct vec_lines::VecLines\">VecLines</a>&lt;T, C&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.82.0/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","vec_lines::VecLinesDecreasing","vec_lines::VecLinesIncreasing"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VecLines%3CT,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#87-273\">source</a><a href=\"#impl-VecLines%3CT,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"vec_lines/trait.Signed.html\" title=\"trait vec_lines::Signed\">Signed</a>, C: <a class=\"trait\" href=\"vec_lines/trait.Constraint.html\" title=\"trait vec_lines::Constraint\">Constraint</a>&gt; <a class=\"struct\" href=\"vec_lines/struct.VecLines.html\" title=\"struct vec_lines::VecLines\">VecLines</a>&lt;T, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#105-110\">source</a><h4 class=\"code-header\">pub fn <a href=\"vec_lines/struct.VecLines.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>傾き単調な直線の列を <code>Vec</code> で管理します。</p>\n<h5 id=\"使い方\"><a class=\"doc-anchor\" href=\"#使い方\">§</a>使い方</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"comment\">// 傾きが単調減少な直線の列を管理します。\n</span><span class=\"kw\">let </span>lines = VecLinesDecreasing::&lt;i32&gt;::new();\n\n<span class=\"comment\">// 傾きが単調減少な直線の列を管理します。\n</span><span class=\"kw\">let </span>lines = VecLinesDecreasing::&lt;i32&gt;::new();\n\n<span class=\"comment\">// それぞれ、別名を使わずに構築する方法です。\n</span><span class=\"kw\">let </span>lines = VecLines::&lt;i32, DecreasingTilt&gt;::new();\n<span class=\"kw\">let </span>lines = VecLines::&lt;i32, IncreasingTilt&gt;::new();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#120-122\">source</a><h4 class=\"code-header\">pub fn <a href=\"vec_lines/struct.VecLines.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>管理している直線が 0 本のとき <code>true</code>、さもなくば <code>false</code> を返します。</p>\n<h5 id=\"使い方-1\"><a class=\"doc-anchor\" href=\"#使い方-1\">§</a>使い方</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>lines = VecLinesDecreasing::&lt;i32&gt;::new();\n<span class=\"macro\">assert!</span>(lines.is_empty());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#136-138\">source</a><h4 class=\"code-header\">pub fn <a href=\"vec_lines/struct.VecLines.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>管理している直線の本数を返します。</p>\n<p>不要な直線が自動的に削除されると、このメソッドの返す値も減少します。</p>\n<h5 id=\"使い方-2\"><a class=\"doc-anchor\" href=\"#使い方-2\">§</a>使い方</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>lines = VecLinesDecreasing::&lt;i32&gt;::new();\n<span class=\"macro\">assert_eq!</span>(lines.len(), <span class=\"number\">0</span>);\n\nlines.push([<span class=\"number\">0</span>, <span class=\"number\">0</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#154-156\">source</a><h4 class=\"code-header\">pub fn <a href=\"vec_lines/struct.VecLines.html#tymethod.get\" class=\"fn\">get</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"vec_lines/struct.Line.html\" title=\"struct vec_lines::Line\">Line</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>index 番目の直線を返します。</p>\n<h5 id=\"使い方-3\"><a class=\"doc-anchor\" href=\"#使い方-3\">§</a>使い方</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>lines = VecLinesDecreasing::&lt;i32&gt;::new();\nlines.push([<span class=\"number\">1</span>, <span class=\"number\">0</span>]);\nlines.push([<span class=\"number\">0</span>, <span class=\"number\">10</span>]);\nlines.push([-<span class=\"number\">1</span>, <span class=\"number\">30</span>]);\n\n<span class=\"comment\">// 直線を手に入れたら、次は `Line::eval` で評価です。\n</span><span class=\"macro\">assert_eq!</span>(lines.get(<span class=\"number\">0</span>).unwrap().eval(<span class=\"number\">100</span>), <span class=\"number\">100</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#182-208\">source</a><h4 class=\"code-header\">pub fn <a href=\"vec_lines/struct.VecLines.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, line: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.array.html\">[T; 2]</a>)</h4></section></summary><div class=\"docblock\"><p>後ろに直線を挿入します。</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<ul>\n<li>マーカー <code>C</code> の定める傾きの単調性に反するとき。</li>\n</ul>\n<h5 id=\"計算量\"><a class=\"doc-anchor\" href=\"#計算量\">§</a>計算量</h5>\n<p>償却定数時間。</p>\n<h5 id=\"使い方-4\"><a class=\"doc-anchor\" href=\"#使い方-4\">§</a>使い方</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>lines = VecLinesDecreasing::&lt;i32&gt;::new();\nlines.push([<span class=\"number\">1</span>, <span class=\"number\">0</span>]);\nlines.push([<span class=\"number\">0</span>, <span class=\"number\">10</span>]);\nlines.push([-<span class=\"number\">1</span>, <span class=\"number\">30</span>]);\n\n<span class=\"comment\">// 直線を手に入れたら、次は `Line::eval` で評価です。\n</span><span class=\"macro\">assert_eq!</span>(lines.get(<span class=\"number\">0</span>).unwrap().eval(<span class=\"number\">100</span>), <span class=\"number\">100</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eval_gcc\" class=\"method\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#230-251\">source</a><h4 class=\"code-header\">pub fn <a href=\"vec_lines/struct.VecLines.html#tymethod.eval_gcc\" class=\"fn\">eval_gcc</a>(&amp;self, x: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>黄金分割探索で最適値を計算します。</p>\n<h5 id=\"計算量-1\"><a class=\"doc-anchor\" href=\"#計算量-1\">§</a>計算量</h5>\n<p>管理している直線の本数を n として、Θ( lg n )。</p>\n<h5 id=\"使い方-5\"><a class=\"doc-anchor\" href=\"#使い方-5\">§</a>使い方</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>lines = VecLinesDecreasing::&lt;i32&gt;::new();\nlines.push([<span class=\"number\">1</span>, <span class=\"number\">0</span>]);\nlines.push([<span class=\"number\">0</span>, <span class=\"number\">10</span>]);\nlines.push([-<span class=\"number\">1</span>, <span class=\"number\">30</span>]);\n\n<span class=\"macro\">assert_eq!</span>(lines.eval_gcc(-<span class=\"number\">10</span>), <span class=\"prelude-val\">Some</span>(-<span class=\"number\">10</span>)); <span class=\"comment\">// x\n</span><span class=\"macro\">assert_eq!</span>(lines.eval_gcc(<span class=\"number\">15</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>)); <span class=\"comment\">// 10\n</span><span class=\"macro\">assert_eq!</span>(lines.eval_gcc(<span class=\"number\">40</span>), <span class=\"prelude-val\">Some</span>(-<span class=\"number\">10</span>)); <span class=\"comment\">// -x + 30</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_copied\" class=\"method\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#270-272\">source</a><h4 class=\"code-header\">pub fn <a href=\"vec_lines/struct.VecLines.html#tymethod.iter_copied\" class=\"fn\">iter_copied</a>(&amp;self) -&gt; impl '_ + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"vec_lines/struct.Line.html\" title=\"struct vec_lines::Line\">Line</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>管理している直線を順番に返すイテレータを返します。</p>\n<h5 id=\"使い方-6\"><a class=\"doc-anchor\" href=\"#使い方-6\">§</a>使い方</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>lines = VecLinesDecreasing::&lt;i32&gt;::new();\nlines.push([<span class=\"number\">1</span>, <span class=\"number\">0</span>]);\nlines.push([<span class=\"number\">0</span>, <span class=\"number\">10</span>]);\nlines.push([-<span class=\"number\">1</span>, <span class=\"number\">30</span>]);\n\n<span class=\"kw\">let </span>lines = lines\n    .iter_copied()\n    .map(Line::into_coeff)\n    .collect::&lt;Vec&lt;<span class=\"kw\">_</span>&gt;&gt;();\n<span class=\"macro\">assert_eq!</span>(lines, <span class=\"macro\">vec!</span>[[<span class=\"number\">1</span>, <span class=\"number\">0</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>], [-<span class=\"number\">1</span>, <span class=\"number\">30</span>]]);</code></pre></div>\n</div></details></div></details>",0,"vec_lines::VecLinesDecreasing","vec_lines::VecLinesIncreasing"],["<section id=\"impl-Eq-for-VecLines%3CT,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#82\">source</a><a href=\"#impl-Eq-for-VecLines%3CT,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"vec_lines/struct.VecLines.html\" title=\"struct vec_lines::VecLines\">VecLines</a>&lt;T, C&gt;</h3></section>","Eq","vec_lines::VecLinesDecreasing","vec_lines::VecLinesIncreasing"],["<section id=\"impl-StructuralPartialEq-for-VecLines%3CT,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/vec_lines/lib.rs.html#82\">source</a><a href=\"#impl-StructuralPartialEq-for-VecLines%3CT,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"vec_lines/struct.VecLines.html\" title=\"struct vec_lines::VecLines\">VecLines</a>&lt;T, C&gt;</h3></section>","StructuralPartialEq","vec_lines::VecLinesDecreasing","vec_lines::VecLinesIncreasing"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[24420]}