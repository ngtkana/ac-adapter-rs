(function() {
    var type_impls = Object.fromEntries([["link_cut_tree",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LinkCutTreeBase%3CO%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#21-217\">source</a><a href=\"#impl-LinkCutTreeBase%3CO%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;O: OpBase&gt; <a class=\"struct\" href=\"link_cut_tree/struct.LinkCutTreeBase.html\" title=\"struct link_cut_tree::LinkCutTreeBase\">LinkCutTreeBase</a>&lt;O&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#23-37\">source</a><h4 class=\"code-header\">pub fn <a href=\"link_cut_tree/struct.LinkCutTreeBase.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructs a new Link-Cut Tree with <code>n</code> nodes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_values\" class=\"method\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#40-57\">source</a><h4 class=\"code-header\">pub fn <a href=\"link_cut_tree/struct.LinkCutTreeBase.html#tymethod.from_values\" class=\"fn\">from_values</a>(values: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = O::Value&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructs a new Link-Cut Tree with <code>n</code> nodes, where the values are given by <code>values</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.link\" class=\"method\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#65-82\">source</a><h4 class=\"code-header\">pub fn <a href=\"link_cut_tree/struct.LinkCutTreeBase.html#tymethod.link\" class=\"fn\">link</a>(&amp;mut self, p: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>, c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Connects <code>p</code> and <code>c</code> with an edge, preserving the direction.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<ul>\n<li>If <code>c</code> is not a root.</li>\n<li>If <code>c</code> and <code>p</code> are already connected.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.undirected_link\" class=\"method\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#88-95\">source</a><h4 class=\"code-header\">pub fn <a href=\"link_cut_tree/struct.LinkCutTreeBase.html#tymethod.undirected_link\" class=\"fn\">undirected_link</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>, j: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Connects <code>i</code> and <code>j</code> with an edge, not preserving the direction.</p>\n<h5 id=\"returns\"><a class=\"doc-anchor\" href=\"#returns\">§</a>Returns</h5>\n<ul>\n<li><code>true</code> if the edge is added.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cut\" class=\"method\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#101-114\">source</a><h4 class=\"code-header\">pub fn <a href=\"link_cut_tree/struct.LinkCutTreeBase.html#tymethod.cut\" class=\"fn\">cut</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Cuts the edge between <code>x</code> and its parent.</p>\n<h5 id=\"returns-1\"><a class=\"doc-anchor\" href=\"#returns-1\">§</a>Returns</h5>\n<p>The id of the parent of <code>x</code> before the cut.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.undirected_cut\" class=\"method\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#120-127\">source</a><h4 class=\"code-header\">pub fn <a href=\"link_cut_tree/struct.LinkCutTreeBase.html#tymethod.undirected_cut\" class=\"fn\">undirected_cut</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>, j: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Cuts the edge between <code>i</code> and <code>j</code>, not preserving the direction.</p>\n<h5 id=\"returns-2\"><a class=\"doc-anchor\" href=\"#returns-2\">§</a>Returns</h5>\n<p><code>true</code> if the edge is cut.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evert\" class=\"method\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#130-137\">source</a><h4 class=\"code-header\">pub fn <a href=\"link_cut_tree/struct.LinkCutTreeBase.html#tymethod.evert\" class=\"fn\">evert</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Makes <code>x</code> the root of the tree.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.undirected_has_edge\" class=\"method\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#140-142\">source</a><h4 class=\"code-header\">pub fn <a href=\"link_cut_tree/struct.LinkCutTreeBase.html#tymethod.undirected_has_edge\" class=\"fn\">undirected_has_edge</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if there is an edge between <code>x</code> and <code>y</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.undirected_is_connected\" class=\"method\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#145-156\">source</a><h4 class=\"code-header\">pub fn <a href=\"link_cut_tree/struct.LinkCutTreeBase.html#tymethod.undirected_is_connected\" class=\"fn\">undirected_is_connected</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>x</code> and <code>y</code> are connected.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lca\" class=\"method\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#159-174\">source</a><h4 class=\"code-header\">pub fn <a href=\"link_cut_tree/struct.LinkCutTreeBase.html#tymethod.lca\" class=\"fn\">lca</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the id of the lowest common ancestor of <code>x</code> and <code>y</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#177-184\">source</a><h4 class=\"code-header\">pub fn <a href=\"link_cut_tree/struct.LinkCutTreeBase.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(O::Value) -&gt; O::Value)</h4></section></summary><div class=\"docblock\"><p>Sets the value of <code>x</code> to <code>f(x)</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold\" class=\"method\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#187-193\">source</a><h4 class=\"code-header\">pub fn <a href=\"link_cut_tree/struct.LinkCutTreeBase.html#tymethod.fold\" class=\"fn\">fold</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>) -&gt; O::Value</h4></section></summary><div class=\"docblock\"><p>Folds the path from the root to <code>x</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.undirected_fold\" class=\"method\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#196-202\">source</a><h4 class=\"code-header\">pub fn <a href=\"link_cut_tree/struct.LinkCutTreeBase.html#tymethod.undirected_fold\" class=\"fn\">undirected_fold</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>, j: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O::Value&gt;</h4></section></summary><div class=\"docblock\"><p>Folds the path from <code>i</code> to <code>j</code>, not preserving the direction.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parent\" class=\"method\"><a class=\"src rightside\" href=\"src/link_cut_tree/base.rs.html#205-216\">source</a><h4 class=\"code-header\">pub fn <a href=\"link_cut_tree/struct.LinkCutTreeBase.html#tymethod.parent\" class=\"fn\">parent</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.82.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the id of the parent of <code>x</code>.</p>\n</div></details></div></details>",0,"link_cut_tree::LinkCutTree","link_cut_tree::CommutLinkCutTree","link_cut_tree::NonCommutLinkCutTree"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[11826]}