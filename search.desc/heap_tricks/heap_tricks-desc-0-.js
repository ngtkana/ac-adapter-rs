searchState.loadedDescShard("heap_tricks", 0, "<code>remove_unchecked</code> のできるヒープです。\n…\n集約操作を指定するためのトレイトです。 …\n何も集約しないことを表す型です。 <code>Handler</code> …\n論理削除のできるヒープです。\n総和を集約するための型です。 <code>Handler</code> …\n左側ヒープの要素が <code>k</code> …\n右側ヒープの要素が <code>k</code> …\n…\n…\n…\n…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nハンドラへの参照を返します。\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nヒープが空ならば <code>true</code> を返します。\nヒープが空ならば <code>true</code> を返します。\n左側ヒープの要素数を返します。\n全体の要素数を返します。\nヒープの長さを返します。\n…\n…\n空のヒープを構築します。\n…\n左側ヒープの最大要素があれば返します。\n右側ヒープの最大要素があれば返します。\n…\n左側から削除するときのコールバック関数\n…\n右側から削除するときのコールバック関数\n…\nヒープに新しい要素 <code>x</code> を追加します。\n左側に挿入するときのコールバック関数\n…\n右側に挿入するときのコールバック関数\n…\n…\n…\nヒープに含まれる要素 <code>x</code> を削除します。 …\n右側ヒープの要素数を返します。\n<code>Handler</code> を指定して構築します。")